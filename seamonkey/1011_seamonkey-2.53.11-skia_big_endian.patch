From: Myckel Habets <gentoo-bugs@habets-dobben.nl>

Ref upstream: https://bug1144632.bmoattachments.org/attachment.cgi?id=8980162
https://bugs.gentoo.org/723372

fix big-endian Skia builds.

diff -urN seamonkey-2.53.11.1.orig/gfx/skia/skia/include/core/SkColorPriv.h seamonkey-2.53.11.1/gfx/skia/skia/include/core/SkColorPriv.h
--- seamonkey-2.53.11.1.orig/gfx/skia/skia/include/core/SkColorPriv.h	2020-02-18 00:37:51.000000000 +0100
+++ seamonkey-2.53.11.1/gfx/skia/skia/include/core/SkColorPriv.h	2022-03-26 09:47:13.622916532 +0100
@@ -55,17 +55,10 @@
  *  Here we enforce this constraint.
  */
 
-#ifdef SK_CPU_BENDIAN
-    #define SK_RGBA_R32_SHIFT   24
-    #define SK_RGBA_G32_SHIFT   16
-    #define SK_RGBA_B32_SHIFT   8
-    #define SK_RGBA_A32_SHIFT   0
-#else
-    #define SK_RGBA_R32_SHIFT   0
-    #define SK_RGBA_G32_SHIFT   8
-    #define SK_RGBA_B32_SHIFT   16
-    #define SK_RGBA_A32_SHIFT   24
-#endif
+#define SK_RGBA_R32_SHIFT   0
+#define SK_RGBA_G32_SHIFT   8
+#define SK_RGBA_B32_SHIFT   16
+#define SK_RGBA_A32_SHIFT   24
 
 #define SkGetPackedA32(packed)      ((uint32_t)((packed) << (24 - SK_A32_SHIFT)) >> 24)
 #define SkGetPackedR32(packed)      ((uint32_t)((packed) << (24 - SK_R32_SHIFT)) >> 24)
diff -urN seamonkey-2.53.11.1.orig/gfx/skia/skia/include/core/SkImageInfo.h seamonkey-2.53.11.1/gfx/skia/skia/include/core/SkImageInfo.h
--- seamonkey-2.53.11.1.orig/gfx/skia/skia/include/core/SkImageInfo.h	2020-02-18 00:37:51.000000000 +0100
+++ seamonkey-2.53.11.1/gfx/skia/skia/include/core/SkImageInfo.h	2022-03-26 09:48:04.405078126 +0100
@@ -84,7 +84,7 @@
 #elif SK_PMCOLOR_BYTE_ORDER(R,G,B,A)
     kN32_SkColorType = kRGBA_8888_SkColorType,
 #else
-    #error "SK_*32_SHIFT values must correspond to BGRA or RGBA byte order"
+    kN32_SkColorType = kBGRA_8888_SkColorType,
 #endif
 };
 
diff -urN seamonkey-2.53.11.1.orig/gfx/skia/skia/include/gpu/GrTypes.h seamonkey-2.53.11.1/gfx/skia/skia/include/gpu/GrTypes.h
--- seamonkey-2.53.11.1.orig/gfx/skia/skia/include/gpu/GrTypes.h	2020-02-18 00:37:51.000000000 +0100
+++ seamonkey-2.53.11.1/gfx/skia/skia/include/gpu/GrTypes.h	2022-03-26 09:49:02.244540120 +0100
@@ -344,15 +344,12 @@
 static const int kGrPixelConfigCnt = kLast_GrPixelConfig + 1;
 
 // Aliases for pixel configs that match skia's byte order.
-#ifndef SK_CPU_LENDIAN
-    #error "Skia gpu currently assumes little endian"
-#endif
 #if SK_PMCOLOR_BYTE_ORDER(B,G,R,A)
     static const GrPixelConfig kSkia8888_GrPixelConfig = kBGRA_8888_GrPixelConfig;
 #elif SK_PMCOLOR_BYTE_ORDER(R,G,B,A)
     static const GrPixelConfig kSkia8888_GrPixelConfig = kRGBA_8888_GrPixelConfig;
 #else
-    #error "SK_*32_SHIFT values must correspond to GL_BGRA or GL_RGBA format."
+    static const GrPixelConfig kSkia8888_GrPixelConfig = kBGRA_8888_GrPixelConfig;
 #endif
 
 /**
diff -urN seamonkey-2.53.11.1.orig/gfx/skia/skia/src/core/SkColorData.h seamonkey-2.53.11.1/gfx/skia/skia/src/core/SkColorData.h
--- seamonkey-2.53.11.1.orig/gfx/skia/skia/src/core/SkColorData.h	2020-02-18 00:37:51.000000000 +0100
+++ seamonkey-2.53.11.1/gfx/skia/skia/src/core/SkColorData.h	2022-03-26 09:50:09.872418766 +0100
@@ -32,17 +32,10 @@
  *  Here we enforce this constraint.
  */
 
-#ifdef SK_CPU_BENDIAN
-    #define SK_BGRA_B32_SHIFT   24
-    #define SK_BGRA_G32_SHIFT   16
-    #define SK_BGRA_R32_SHIFT   8
-    #define SK_BGRA_A32_SHIFT   0
-#else
-    #define SK_BGRA_B32_SHIFT   0
-    #define SK_BGRA_G32_SHIFT   8
-    #define SK_BGRA_R32_SHIFT   16
-    #define SK_BGRA_A32_SHIFT   24
-#endif
+#define SK_BGRA_B32_SHIFT   0
+#define SK_BGRA_G32_SHIFT   8
+#define SK_BGRA_R32_SHIFT   16
+#define SK_BGRA_A32_SHIFT   24
 
 #if defined(SK_PMCOLOR_IS_RGBA) && defined(SK_PMCOLOR_IS_BGRA)
     #error "can't define PMCOLOR to be RGBA and BGRA"
