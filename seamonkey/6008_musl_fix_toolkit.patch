From: Jory Pratt <anarchy@gentoo.org>
Date: Tue, 19 Mar 2019 10:58:57 -0500
Subject: Fix toolkit for musl support

--- a/toolkit/crashreporter/google-breakpad/src/common/linux/dump_symbols.cc
+++ b/toolkit/crashreporter/google-breakpad/src/common/linux/dump_symbols.cc
@@ -41,16 +41,17 @@
 #include <link.h>
 #include <stdint.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
 #include <sys/mman.h>
 #include <sys/stat.h>
 #include <unistd.h>
+#include <libgen.h>
 
 #include <iostream>
 #include <set>
 #include <string>
 #include <utility>
 #include <vector>
 
 #include "common/arm_ex_reader.h"
--- a/toolkit/crashreporter/google-breakpad/src/common/stabs_reader.cc
+++ b/toolkit/crashreporter/google-breakpad/src/common/stabs_reader.cc
@@ -36,16 +36,20 @@
 #include <assert.h>
 #include <stab.h>
 #include <string.h>
 
 #include <string>
 
 #include "common/using_std_string.h"
 
+#ifndef N_UNDF
+#define N_UNDF 0
+#endif
+
 using std::vector;
 
 namespace google_breakpad {
 
 StabsReader::EntryIterator::EntryIterator(const ByteBuffer *buffer,
                                           bool big_endian, size_t value_size)
     : value_size_(value_size), cursor_(buffer, big_endian) {
   // Actually, we could handle weird sizes just fine, but they're
--- a/toolkit/crashreporter/google-breakpad/src/common/stabs_reader.h
+++ b/toolkit/crashreporter/google-breakpad/src/common/stabs_reader.h
@@ -50,17 +50,17 @@
 #include <stdint.h>
 
 #ifdef HAVE_CONFIG_H
 #include <config.h>
 #endif
 
 #ifdef HAVE_MACH_O_NLIST_H
 #include <mach-o/nlist.h>
-#elif defined(HAVE_A_OUT_H)
+#elif 0
 #include <a.out.h>
 #endif
 
 #include <string>
 #include <vector>
 
 #include "common/byte_cursor.h"
 #include "common/using_std_string.h"
--- a/toolkit/mozapps/update/common/updatedefines.h
+++ b/toolkit/mozapps/update/common/updatedefines.h
@@ -95,17 +95,17 @@
 # define NS_tclosedir closedir
 # define NS_treaddir readdir
 #else
 # include <sys/wait.h>
 # include <unistd.h>
 
 #ifdef SOLARIS
 # include <sys/stat.h>
-#else
+#elif !defined(__linux__) || defined(__GLIBC__)
 # include <fts.h>
 #endif
 # include <dirent.h>
 
 #ifdef XP_MACOSX
 # include <sys/time.h>
 #endif
 
--- a/toolkit/mozapps/update/updater/updater.cpp
+++ b/toolkit/mozapps/update/updater/updater.cpp
@@ -3974,16 +3974,17 @@
   return rv;
 }
 
 #else
 
 int add_dir_entries(const NS_tchar *dirpath, ActionList *list)
 {
   int rv = OK;
+#if !defined(__linux__) || defined(__GLIBC__)
   FTS *ftsdir;
   FTSENT *ftsdirEntry;
   mozilla::UniquePtr<NS_tchar[]> searchpath(get_full_path(dirpath));
 
   // Remove the trailing slash so the paths don't contain double slashes. The
   // existence of the slash has already been checked in DoUpdate.
   searchpath[NS_tstrlen(searchpath.get()) - 1] = NS_T('\0');
   char* const pathargv[] = {searchpath.get(), nullptr};
@@ -4077,16 +4078,17 @@
         break;
     }
 
     if (rv != OK)
       break;
   }
 
   fts_close(ftsdir);
+#endif
 
   return rv;
 }
 #endif
 
 static NS_tchar*
 GetManifestContents(const NS_tchar *manifest)
 {
