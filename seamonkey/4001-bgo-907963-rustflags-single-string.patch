This fixes bug https://bugs.gentoo.org/942994

Patch is taken from the Firefox patches tarball, initially provided by
Fedora Linux.

diff '--color=auto' -urN seamonkey-2.53.20.orig/build/moz.configure/toolchain.configure seamonkey-2.53.20/build/moz.configure/toolchain.configure
--- seamonkey-2.53.20.orig/build/moz.configure/toolchain.configure	2024-12-14 11:37:23.000000000 +0100
+++ seamonkey-2.53.20/build/moz.configure/toolchain.configure	2025-01-28 14:28:42.652323359 +0100
@@ -1686,9 +1686,7 @@
 
 # ==============================================================
 
-option(env='RUSTFLAGS',
-       nargs=1,
-       help='Rust compiler flags')
+option(env="RUSTFLAGS", nargs=1, help="Rust compiler flags", comma_split=False)
 set_config('RUSTFLAGS', depends('RUSTFLAGS')(lambda flags: flags))
 
 
diff '--color=auto' -urN seamonkey-2.53.20.orig/python/mozbuild/mozbuild/configure/options.py seamonkey-2.53.20/python/mozbuild/mozbuild/configure/options.py
--- seamonkey-2.53.20.orig/python/mozbuild/mozbuild/configure/options.py	2024-12-13 01:29:20.000000000 +0100
+++ seamonkey-2.53.20/python/mozbuild/mozbuild/configure/options.py	2025-01-28 14:35:21.122284623 +0100
@@ -158,14 +158,18 @@
     - `help` is the option description for use in the --help output.
     - `possible_origins` is a tuple of strings that are origins accepted for
       this option. Example origins are 'mozconfig', 'implied', and 'environment'.
+    - `comma_split` specifies whether the value string should be split on
+      commas. The default is True. Setting it False is necessary for things
+      like compiler flags which should be a single string that may contain
+      commas.
     '''
     __slots__ = (
         'id', 'prefix', 'name', 'env', 'nargs', 'default', 'choices', 'help',
-        'possible_origins',
+        'possible_origins', "comma_split",
     )
 
     def __init__(self, name=None, env=None, nargs=None, default=None,
-                 possible_origins=None, choices=None, help=None):
+                 possible_origins=None, choices=None, help=None, comma_split=True):
         if not name and not env:
             raise InvalidOptionError(
                 'At least an option name or an environment variable name must '
@@ -267,9 +271,10 @@
                 raise InvalidOptionError('Not enough `choices` for `nargs`')
         self.choices = choices
         self.help = help
+        self.comma_split = comma_split
 
     @staticmethod
-    def split_option(option):
+    def split_option(option, comma_split=True):
         '''Split a flag or variable into a prefix, a name and values
 
         Variables come in the form NAME=values (no prefix).
@@ -282,7 +287,13 @@
 
         elements = option.split('=', 1)
         name = elements[0]
-        values = tuple(elements[1].split(',')) if len(elements) == 2 else ()
+        if len(elements) == 2:
+            if comma_split:
+                values = tuple(elements[1].split(","))
+            else:
+                values = (elements[1],)
+        else:
+            values = ()
         if name.startswith('--'):
             name = name[2:]
             if not name.islower():
@@ -351,7 +362,7 @@
                 '%s can not be set by %s. Values are accepted from: %s' %
                 (option, origin, ', '.join(self.possible_origins)))
 
-        prefix, name, values = self.split_option(option)
+        prefix, name, values = self.split_option(option, self.comma_split)
         option = self._join_option(prefix, name)
 
         assert name in (self.name, self.env)
